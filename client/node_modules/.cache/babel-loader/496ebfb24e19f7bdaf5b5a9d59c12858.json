{"ast":null,"code":"import _defineProperty from \"/Users/lukekar1818/Documents/Du_coding/FinalProject/WePlay/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/lukekar1818/Documents/Du_coding/FinalProject/WePlay/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/lukekar1818/Documents/Du_coding/FinalProject/WePlay/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/lukekar1818/Documents/Du_coding/FinalProject/WePlay/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lukekar1818/Documents/Du_coding/FinalProject/WePlay/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/lukekar1818/Documents/Du_coding/FinalProject/WePlay/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/lukekar1818/Documents/Du_coding/FinalProject/WePlay/client/src/pages/Books/Books.js\";\nimport React, { Component } from \"react\";\nimport Jumbotron from \"../../components/Jumbotron\";\nimport DeleteBtn from \"../../components/DeleteBtn\";\nimport API from \"../../utils/API\";\nimport { Col, Row, Container } from \"../../components/Grid\";\nimport { List, ListItem } from \"../../components/List\";\nimport { Input, TextArea, FormBtn } from \"../../components/Form\";\n\nvar Books =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Books, _Component);\n\n  function Books() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Books);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Books)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      books: [],\n      title: \"\",\n      sport: \"\",\n      authorEmail: \"\",\n      author: \"\",\n      players: \"\",\n      date: \"\",\n      time: \"\",\n      gender: \"\",\n      city: \"\",\n      state: \"\",\n      description: \"\"\n    };\n\n    _this.loadBooks = function () {\n      API.getBooks().then(function (res) {\n        return _this.setState({\n          books: res.data,\n          title: \"\",\n          sport: \"\",\n          author: \"\",\n          authorEmail: \"\",\n          synopsis: \"\"\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.deleteBook = function (id) {\n      console.log(\"deletebook firing in Books.js client\");\n      API.deleteBook(id).then(function (res) {\n        return _this.loadBooks();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleInputChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault();\n\n      if (_this.state.title && _this.state.author) {\n        API.saveBook({\n          title: _this.state.title,\n          author: _this.state.author,\n          sport: _this.state.sport,\n          //players: this.state.players,\n          date: _this.state.date,\n          //time:this.state.time,\n          //gender: this.state.gender,\n          //city: this.state.city,\n          //state: this.state.state,\n          //description: this.state.description,\n          authorEmail: _this.state.authorEmail\n        }).then(function (res) {\n          return _this.loadBooks();\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Books, [{\n    key: \"componentDidMount\",\n    // When the component mounts, load all books and save them to this.state.books\n    value: function componentDidMount() {\n      this.loadBooks();\n    } // Loads all books  and sets them to this.state.books\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"WePlay\")), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: this.state.title,\n        onChange: this.handleInputChange,\n        name: \"title\",\n        placeholder: \"Title (required)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(Input, {\n        value: this.state.author,\n        onChange: this.handleInputChange,\n        name: \"author\",\n        placeholder: \"Author (required)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(Input, {\n        value: this.state.sport,\n        onChange: this.handleInputChange,\n        name: \"sport\",\n        placeholder: \"Sport (required)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(Input, {\n        value: this.state.players,\n        onChange: this.handleInputChange,\n        name: \"players\",\n        placeholder: \"Players\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(Input, {\n        value: this.state.date,\n        onChange: this.handleInputChange,\n        name: \"date\",\n        placeholder: \"Date (required)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(Input, {\n        value: this.state.time,\n        onChange: this.handleInputChange,\n        name: \"time\",\n        placeholder: \"Time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), React.createElement(Input, {\n        value: this.state.gender,\n        onChange: this.handleInputChange,\n        name: \"gender\",\n        placeholder: \"Gender\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), React.createElement(Input, {\n        value: this.state.authorEmail,\n        onChange: this.handleInputChange,\n        name: \"authorEmail\",\n        placeholder: \"Authors Email (required)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(Input, {\n        value: this.state.city,\n        onChange: this.handleInputChange,\n        name: \"city\",\n        placeholder: \"City\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(Input, {\n        value: this.state.state,\n        onChange: this.handleInputChange,\n        name: \"state\",\n        placeholder: \"State\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }), React.createElement(TextArea, {\n        value: this.state.description,\n        onChange: this.handleInputChange,\n        name: \"descrition\",\n        placeholder: \"Descripton (Optional)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }), React.createElement(FormBtn, {\n        disabled: !(this.state.author && this.state.title),\n        onClick: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Submit Event\"))), React.createElement(Col, {\n        size: \"md-6 sm-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"Current Events\")), this.state.books.length ? React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, this.state.books.map(function (book) {\n        return React.createElement(ListItem, {\n          key: book._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"/books/\" + book._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, book.title, \" by \", book.author)), React.createElement(\"h6\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }, \"Playing: \", book.sport), React.createElement(\"h6\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }, \"Email: \", book.authorEmail), React.createElement(DeleteBtn, {\n          onClick: function onClick() {\n            return _this2.deleteBook(book._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }));\n      })) : React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"No Results to Display\"))));\n    }\n  }]);\n\n  return Books;\n}(Component);\n\nexport default Books;","map":{"version":3,"sources":["/Users/lukekar1818/Documents/Du_coding/FinalProject/WePlay/client/src/pages/Books/Books.js"],"names":["React","Component","Jumbotron","DeleteBtn","API","Col","Row","Container","List","ListItem","Input","TextArea","FormBtn","Books","state","books","title","sport","authorEmail","author","players","date","time","gender","city","description","loadBooks","getBooks","then","res","setState","data","synopsis","catch","err","console","log","deleteBook","id","handleInputChange","event","target","name","value","handleFormSubmit","preventDefault","saveBook","length","map","book","_id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Jumbotron from \"../../components/Jumbotron\";\r\nimport DeleteBtn from \"../../components/DeleteBtn\";\r\nimport API from \"../../utils/API\";\r\nimport { Col, Row, Container } from \"../../components/Grid\";\r\nimport { List, ListItem } from \"../../components/List\";\r\nimport { Input, TextArea, FormBtn } from \"../../components/Form\";\r\n\r\nclass Books extends Component {\r\n  // Setting our component's initial state\r\n  state = {\r\n    books: [],\r\n    title: \"\",\r\n    sport: \"\",\r\n    authorEmail: \"\",\r\n    author: \"\",\r\n    players: \"\",\r\n    date: \"\",\r\n    time: \"\",\r\n    gender: \"\",\r\n    city: \"\",\r\n    state: \"\",\r\n    description: \"\"\r\n  };\r\n\r\n  // When the component mounts, load all books and save them to this.state.books\r\n  componentDidMount() {\r\n    this.loadBooks();\r\n  }\r\n\r\n  // Loads all books  and sets them to this.state.books\r\n  loadBooks = () => {\r\n    API.getBooks()\r\n      .then(res =>\r\n        this.setState({ books: res.data, title: \"\", sport: \"\", author: \"\", authorEmail: \"\", synopsis: \"\" })\r\n      )\r\n\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  // Deletes a book from the database with a given id, then reloads books from the db\r\n  deleteBook = id => {\r\n    console.log(\"deletebook firing in Books.js client\")\r\n    API.deleteBook(id)\r\n      .then(res => this.loadBooks())\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  // Handles updating component state when the user types into the input field\r\n  handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  // When the form is submitted, use the API.saveBook method to save the book data\r\n  // Then reload books from the database\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    if (this.state.title && this.state.author) {\r\n      API.saveBook({\r\n        title: this.state.title,\r\n        author: this.state.author,\r\n        sport: this.state.sport,\r\n        //players: this.state.players,\r\n        date: this.state.date,\r\n        //time:this.state.time,\r\n        //gender: this.state.gender,\r\n        //city: this.state.city,\r\n        //state: this.state.state,\r\n        //description: this.state.description,\r\n        authorEmail: this.state.authorEmail,\r\n      })\r\n        .then(res => this.loadBooks())\r\n        .catch(err => console.log(err));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Row>\r\n          <Col size=\"md-6\">\r\n            <Jumbotron>\r\n              <h1>WePlay</h1>\r\n            </Jumbotron>\r\n            <form>\r\n              <Input\r\n                value={this.state.title}\r\n                onChange={this.handleInputChange}\r\n                name=\"title\"\r\n                placeholder=\"Title (required)\"\r\n              />\r\n              <Input\r\n                value={this.state.author}\r\n                onChange={this.handleInputChange}\r\n                name=\"author\"\r\n                placeholder=\"Author (required)\"\r\n              />\r\n              <Input\r\n                value={this.state.sport}\r\n                onChange={this.handleInputChange}\r\n                name=\"sport\"\r\n                placeholder=\"Sport (required)\"\r\n              />\r\n              <Input\r\n                value={this.state.players}\r\n                onChange={this.handleInputChange}\r\n                name=\"players\"\r\n                placeholder=\"Players\"\r\n              />\r\n              <Input\r\n                value={this.state.date}\r\n                onChange={this.handleInputChange}\r\n                name=\"date\"\r\n                placeholder=\"Date (required)\"\r\n              />\r\n              <Input\r\n                value={this.state.time}\r\n                onChange={this.handleInputChange}\r\n                name=\"time\"\r\n                placeholder=\"Time\"\r\n              />\r\n              <Input\r\n                value={this.state.gender}\r\n                onChange={this.handleInputChange}\r\n                name=\"gender\"\r\n                placeholder=\"Gender\"\r\n              />\r\n              <Input\r\n                value={this.state.authorEmail}\r\n                onChange={this.handleInputChange}\r\n                name=\"authorEmail\"\r\n                placeholder=\"Authors Email (required)\"\r\n              />\r\n              <Input\r\n                value={this.state.city}\r\n                onChange={this.handleInputChange}\r\n                name=\"city\"\r\n                placeholder=\"City\"\r\n              />\r\n              <Input\r\n                value={this.state.state}\r\n                onChange={this.handleInputChange}\r\n                name=\"state\"\r\n                placeholder=\"State\"\r\n              />\r\n              <TextArea\r\n                value={this.state.description}\r\n                onChange={this.handleInputChange}\r\n                name=\"descrition\"\r\n                placeholder=\"Descripton (Optional)\"\r\n              />\r\n              <FormBtn\r\n                disabled={!(this.state.author && this.state.title)}\r\n                onClick={this.handleFormSubmit}\r\n              >\r\n                Submit Event\r\n              </FormBtn>\r\n            </form>\r\n          </Col>\r\n          <Col size=\"md-6 sm-12\">\r\n            <Jumbotron>\r\n              <h1>Current Events</h1>\r\n            </Jumbotron>\r\n            {this.state.books.length ? (\r\n              <List>\r\n                {this.state.books.map(book => {\r\n                  return (\r\n                    <ListItem key={book._id}>\r\n                      <a href={\"/books/\" + book._id}>\r\n                        <strong>\r\n                          {book.title} by {book.author}\r\n                        </strong>\r\n                      </a>\r\n                      <h6>Playing: {book.sport}</h6>\r\n                      <h6>Email: {book.authorEmail}</h6>\r\n                      <DeleteBtn onClick={() => this.deleteBook(book._id)} />\r\n                    </ListItem>\r\n                  );\r\n                })}\r\n              </List>\r\n            ) : (\r\n                <h3>No Results to Display</h3>\r\n              )}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Books;\r\n"]},"metadata":{},"sourceType":"module"}